%%hopfield
X1 = [1,1,0,0];
X2 = [1,-1,-1,1];
for i = 1:4
    for j = 1:4
        
        %W_1(i,j) = (2*X1(i)-1)*(2*X(j)-1)
    end
end
W_1 = (2*transpose(X1)-[1;1;1;1])*(2*X1-[1 1 1 1])
for i = 1:4
    for j = 1:4
        if (i == j)
            W_1(i,j) = 0;
        end
    end
end
W_2 = ((transpose(X2)* X2))
for i = 1:4
    for j = 1:4
        if (i == j)
            W_2(i,j) = 0
        end
    end
end
%% bipolar
X_1 = [-1,-1,1,1];
X_2 = [1,1,-1,-1];
W1 = ((transpose(X_1)* X_1))
for i = 1:4
    for j = 1:4
        if (i == j)
            W1(i,j) = 0;
        end
    end
end
W2 = ((transpose(X_2)* X_2))
for i = 1:4
    for j = 1:4
        if (i == j)
            W2(i,j) = 0
        end
    end
end
W_t = W1+W2
%% stored pattern
W_in = [0 0 1 -1;1 0 1 -1; 1 1 0 -1;-1 -1 -1 0];
v_true = [-1;0;-1;0];
v_in = [0;0;-1;0];
for k = 1:100
    result =sign(W_in *v_in);
    if (result == v_true)
        break
    else
         v_in = result
         
    end 
end

%% newhop


G       = [-1 -1 -1 -1 1 -1 -1 1;-1 -1 -1 1 -1 -1 1 -1;-1 -1 -1 -1 -1 1 -1 -1;-1 -1 -1 -1 1 -1 -1 -1;-1 -1 -1 -1 1 -1 -1 -1;-1 -1 -1 -1 1 -1 -1 -1;-1 -1 -1 -1 1 -1 -1 -1;1 -1 -1 -1 1 -1 -1 -1;1 1 1 1 1 -1 -1 -1]
G_noise = [-1 -1 -1 1 -1 -1 1 -1;-1 -1 1 -1 -1 -1 -1 -1;1 1 -1 -1 -1 1 -1 1;-1 -1 -1 -1 -1 1 -1 1;-1 1 -1 1 1 -1 1 -1;1 -1 -1 1 -1 -1 -1 -1;-1 -1 1 -1 1 1 -1 1;1 -1 1 -1 -1 -1 1 -1;-1 1 1 1 -1 1 -1 -1]


D       = [-1 -1 -1 -1 -1 -1 -1 -1;-1 -1 -1 1 1 -1 -1 -1;-1 -1 -1 -1 1 1 -1 -1;-1 -1 -1 -1 -1 1 1 -1;-1 -1 -1 -1 -1 -1 1 1;-1 -1 -1 -1 -1 1 1 -1;-1 -1 -1 -1 1 1 -1 -1;-1 -1 -1 1 1 -1 -1 -1;-1 -1 -1 -1 -1 -1 -1 -1]


B       = [-1 -1 -1 -1 -1 -1 -1 -1;-1 -1 -1 -1 -1 -1 -1 -1;-1 -1 -1 -1 -1 -1 -1 -1;1 -1 -1 -1 -1 -1 -1 1;1 1 1 1 1 1 1 1;-1 -1 -1 -1 -1 -1 -1 -1;-1 -1 -1 1 1 -1 -1 -1;-1 -1 -1 -1 -1 -1 -1 -1;-1 -1 -1 -1 -1 -1 -1 -1]

P       = [-1 -1 -1 -1 -1 -1 -1 -1;-1 -1 -1 -1 -1 -1 -1 -1;-1 -1 -1 -1 -1 -1 -1 -1;1 -1 -1 -1 -1 -1 -1 1;1 1 1 1 1 1 1 1;-1 -1 -1 -1 -1 -1 -1 -1;-1 -1 -1 1 1 -1 -1 -1;-1 -1 -1 1 -1 -1 -1 -1;-1 -1 -1 -1 -1 -1 -1 -1]
P_noise = [1 -1 -1 1 -1 -1 1 -1;-1 1 -1 1 -1 -1 1 -1;-1 1 -1 1 -1 -1 -1 1;-1 -1 -1 1 -1 -1 1 1;1 -1 1 -1 1 -1 1 1;-1 1 -1 -1 1 -1 -1 1;-1 1 -1 -1 -1 -1 -1 -1;1 -1 -1 -1 -1 1 -1 -1;1 -1 1 1 -1 -1 -1 -1]

K_noise = [-1 -1 -1 -1 -1 -1 -1 1;-1 -1 -1 -1 -1 -1 1 -1;-1 -1 -1 -1 -1 1 -1 -1;-1 -1 -1 -1 1 -1 -1 -1;-1 -1 -1 -1 -1 -1 -1 -1;1 1 -1 -1 1 -1 -1 -1;-1 -1 -1 -1 -1 -1 -1 -1;1 -1 -1 -1 1 -1 -1 -1;1 -1 -1 1 1 -1 1 1]
K = -ones(9,8);  
K(1,8) = 1;
K(2,7) = 1;
K(3,6) = 1;
K(4,5) = 1;
K(5,5) = 1;
K(6,5) = 1;
K(7,5) = 1;
K(8,5) = 1;
K(9,5) = 1;
K(8,1) = 1;
K(9,1) = 1;
K(9,2) = 1;
K(9,3) = 1;
K(9,4) = 1;
network = [D P K G]
net = newhop(network)
K
figure (5)
imagesc(K)
figure(6)

[Y,Pf,Af]=sim (net,{8 500},{},K_noise)
figure(7)
k = reshape(hardlim(Y{1,500}), 9, 8);
imagesc(k)